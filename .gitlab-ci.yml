stages:
  - test-one
  - test-many

include:
  - project: "team113sanger/common/cicd-template"
    ref: 0.3.3 # Use the latest Git Tag or if experimenting with new components use a Git SHA
    file: ".gitlab-ci-components.yml"

#############
# TEMPLATES #
#############

.generic-variables:
  extends:
    - .component-variables
  variables:
    USE_DOCKER_TARGET_STAGE: 1
    DOCKER_BUILDKIT: 1
    DOCKER_TARGET_STAGE: test
    TEST_FILE: run_tests.sh
    DOCKERFILE_PATH: "" # Must be set in the job definition
    DOCKER_BUILD_CONTEXT: .
    LIBDEFLATE_VERSION: "v1.9"

.generic-script_build_once:
  script:
    - echo "Running a build and then test for the image"
    #
    - echo "DOCKERFILE_PATH=${DOCKERFILE_PATH}"
    - echo "DOCKER_TARGET_STAGE=${DOCKER_TARGET_STAGE}"
    - echo "CANDIDATE_IMAGE=${CANDIDATE_IMAGE}"
    - echo "DOCKER_BUILD_CONTEXT=${DOCKER_BUILD_CONTEXT}"
    - echo "TEST_FILE=${TEST_FILE}"
    - echo "LIBDEFLATE_VERSION=${LIBDEFLATE_VERSION}"
    #
    - test -f ${DOCKERFILE_PATH:?}
    #
    # Build the image
    #
    - BUILD_CMD="docker build --target ${DOCKER_TARGET_STAGE:?} -t ${CANDIDATE_IMAGE:?} -f ${DOCKERFILE_PATH:?} --build-arg LIBDEFLATE_VERSION=${LIBDEFLATE_VERSION:?} --progress=plain ${DOCKER_BUILD_CONTEXT:?}"
    - echo "Running build command ${BUILD_CMD}"
    - eval ${BUILD_CMD}
    #
    # Test the image
    #
    - docker run --rm ${CANDIDATE_IMAGE:?} ls -l ${TEST_FILE:?}
    - docker run --rm ${CANDIDATE_IMAGE:?} bash ${TEST_FILE:?} ${LIBDEFLATE_VERSION:?}
    - echo "Build and test completed successfully"

.generic-script_build_many:
  script:
    - echo "Running a build and then test for the image"
    #
    - echo "DOCKERFILE_PATH=${DOCKERFILE_PATH}"
    - echo "DOCKER_TARGET_STAGE=${DOCKER_TARGET_STAGE}"
    - echo "CANDIDATE_IMAGE=${CANDIDATE_IMAGE}"
    - echo "DOCKER_BUILD_CONTEXT=${DOCKER_BUILD_CONTEXT}"
    - echo "TEST_FILE=${TEST_FILE}"
    # From v1.9 to v1.20
    - BUILT_IMAGE="libdeflate"
    - LIBDEFLATE_VERSION=""
    - MULTIPLE_VERSIONS=(v1.9 v1.10 v1.11 v1.12 v1.13 v1.14 v1.15 v1.16 v1.17 v1.18 v1.19 v1.20)
    - echo "Multiple versions to build and test ${MULTIPLE_VERSIONS[@]}"
    #
    - test -f ${DOCKERFILE_PATH:?}
    #
    # Build the image for each version
    #
    - |2
      echo "Building the image for each version"
      for LIBDEFLATE_VERSION in ${MULTIPLE_VERSIONS[@]}; do
        BUILD_CMD="docker build --target ${DOCKER_TARGET_STAGE:?} -t ${BUILT_IMAGE:?}:${LIBDEFLATE_VERSION:?} -f ${DOCKERFILE_PATH:?} --build-arg LIBDEFLATE_VERSION=${LIBDEFLATE_VERSION:?} ${DOCKER_BUILD_CONTEXT:?}"
        # Print the build command in blue so it is easy to see in the long log
        echo ""
        echo ""
        echo ""
        echo -e "\033[0;34mRunning build command ${BUILD_CMD}\033[0m"
        echo "Running build command ${BUILD_CMD}"
        eval ${BUILD_CMD}
      done
    #
    # Test the image for each version
    #
    - |2
      echo "Testing the image for each version"
      for LIBDEFLATE_VERSION in ${MULTIPLE_VERSIONS[@]}; do
        # Print the test command in purple so it is easy to see in the long log
        echo ""
        echo ""
        echo ""
        echo -e "\033[0;35mTesting image ${BUILT_IMAGE:?}:${LIBDEFLATE_VERSION:?}\033[0m"
        docker run --rm ${BUILT_IMAGE:?}:${LIBDEFLATE_VERSION:?} ls -l ${TEST_FILE:?}
        docker run --rm ${BUILT_IMAGE:?}:${LIBDEFLATE_VERSION:?} bash ${TEST_FILE:?} ${LIBDEFLATE_VERSION:?}
      done
    - echo "Build and test completed successfully"

.template_job__build_one_and_test:
  extends:
    - .generic-variables
    - .component-before_script
    - .generic-script_build_once
    - .component-after_script
    - .component-tags-shared-runner
    - .component-rules-except-release

.template_job__build_many_and_test:
  extends:
    - .generic-variables
    - .component-before_script
    - .generic-script_build_many
    - .component-after_script
    - .component-tags-shared-runner
    - .component-rules-develop-feature-hotfix-only

############
#   JOBS   #
############

test-one-ubuntu22-usr_local:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: ubuntu:22.04
    IMAGE_TAG_SUFFIX: "-ubuntu22.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.ubuntu22.usr_local
  extends:
    - .template_job__build_one_and_test

test-one-ubuntu22-custom:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: ubuntu:22.04
    IMAGE_TAG_SUFFIX: "-ubuntu22.custom"
    DOCKERFILE_PATH: docker/Dockerfile.ubuntu22.custom
  extends:
    - .template_job__build_one_and_test

test-one-base_r-usr_local:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: r-base:4.2.3
    IMAGE_TAG_SUFFIX: "-rbase.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.rbase.usr_local
  extends:
    - .template_job__build_one_and_test

test-one-base_r-custom:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: r-base:4.2.3
    IMAGE_TAG_SUFFIX: "-rbase.custom"
    DOCKERFILE_PATH: docker/Dockerfile.rbase.custom
  extends:
    - .template_job__build_one_and_test

test-one-python-usr_local:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: python:3.11.9-slim-bookworm
    IMAGE_TAG_SUFFIX: "-python.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.python.usr_local
  extends:
    - .template_job__build_one_and_test

test-one-python-custom:
  stage: test-one
  variables:
    PRE_FETCH_BASE_IMAGE: python:3.11.9-slim-bookworm
    IMAGE_TAG_SUFFIX: "-python.custom"
    DOCKERFILE_PATH: docker/Dockerfile.python.custom
  extends:
    - .template_job__build_one_and_test

test-many-ubuntu22-usr_local:
  stage: test-many
  variables:
    PRE_FETCH_BASE_IMAGE: ubuntu:22.04
    IMAGE_TAG_SUFFIX: "-ubuntu22.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.ubuntu22.usr_local
  extends:
    - .template_job__build_many_and_test

test-many-python-usr_local:
  stage: test-many
  variables:
    PRE_FETCH_BASE_IMAGE: python:3.11.9-slim-bookworm
    IMAGE_TAG_SUFFIX: "-python.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.python.usr_local
  extends:
    - .template_job__build_many_and_test

test-many-base_r-usr_local:
  stage: test-many
  variables:
    PRE_FETCH_BASE_IMAGE: r-base:4.2.3
    IMAGE_TAG_SUFFIX: "-rbase.usr_local"
    DOCKERFILE_PATH: docker/Dockerfile.rbase.usr_local
  extends:
    - .template_job__build_many_and_test
